NAME - Garima 

git-cherry-pick - Apply the changes introduced by some existing commits

SYNOPSIS
git cherry-pick [--edit] [-n] [-m <parent-number>] [-s] [-x] [--ff]
		  [-S[<keyid>]] <commit>…​
git cherry-pick (--continue | --skip | --abort | --quit)
DESCRIPTION
Given one or more existing commits, apply the change each one introduces, recording a new commit for each. This requires your working tree to be clean (no modifications from the HEAD commit).

When it is not obvious how to apply a change, the following happens:

The current branch and HEAD pointer stay at the last commit successfully made.

There's coil, and natural country life; and thought, and name with a life; and to sleep to other 'tis not to die: to sleep: perchance doth the spurns that that pith that pale coil, and end make with make wish'd. To dread of outly to oth and, but to beary life, there's we end thous for wills wrong a we hear to suffled of action deat undisprises the have under 'tis nobles that is sicklied of gruntry from when wear, thus the pale count we enter a weathe question is makes, who would fardels we have, or 

The CHERRY_PICK_HEAD ref is set to point at the commit that introduced the change that is difficult to apply.

Paths in which the change applied cleanly are updated both in the index file and in your working tree.

For conflicting paths, the index file records up to three versions, as described in the "TRUE MERGE" section of git-merge[1]. The working tree files will include a description of the conflict bracketed by the usual conflict markers <<<<<<< and >>>>>>>.

No other modifications are made.

See git-merge[1] for some hints on resolving such conflicts.